// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PostType {
  Video
  Text
  Quote
  Photo
  Link
}

enum PostStatus {
  Published
  Draft
}

model Post {
  id               String         @id @default(uuid()) @db.VarChar(100)
  originalId       String?        @map("original_id")
  type             PostType
  status           PostStatus
  authorId         String         @map("author_id") @db.VarChar(100)
  originalAuthorId String?        @map("original_author_id") @db.VarChar(100)
  title            String         @db.VarChar(255)
  tags             String[]       @db.VarChar(10)
  dateCreate       DateTime       @default(now()) @map("date_create")
  dateUpdate       DateTime       @updatedAt @map("date_update")
  isReposted       Boolean        @default(false) @map("is_reposted")
  likes            String[]       @db.VarChar(100)
  likesCount       Int            @default(0) @map("likes_count")
  comments         Comment[]
  postsDetails     PostsDetails[]

  @@index([title])
  @@map("posts")
}

model Comment {
  id         String   @id @default(uuid()) @db.VarChar(100)
  postId     String   @map("post_id") @db.VarChar(100)
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId   String   @map("author_id") @db.VarChar(100)
  message    String
  dateCreate DateTime @default(now()) @map("date_create")

  @@map("comments")
}

enum PostDetailType {
  Video
  Photo
  Link
  Description
  QuoteAuthor
  Announcement
  Text
}

model PostsDetails {
  id     String         @id @default(uuid()) @db.VarChar(100)
  postId String         @map("post_id") @db.VarChar(100)
  type   PostDetailType
  value  String
  post   Post           @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("posts_details")
}
